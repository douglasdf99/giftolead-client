@import "languages";

.ql-editor {
  min-height: 300px;
  max-height: 400px;
  line-height: inherit;

  ul,
  ol {
    padding-left: 40px;

    > li {
      padding-left: 0 !important;

      &::before {
        display: none;
      }
    }
  }

  ul > li {
    list-style: disc;
  }

  ol > li {
    list-style: decimal;
  }

  p {
    margin-top: 1em;
    margin-bottom: 1em;
  }
}

.ql-snow {
  .ql-picker {
    font-family: "Open Sans", sans-serif;

    &.ql-size {
      width: 64px;

      .ql-picker-label::before,
      .ql-picker-item::before {
        content: attr(data-value) !important;
      }
    }

    &.ql-content_width,
    &.ql-content_align,
    &.ql-custom_parameters,
    &.ql-custom_snippet {
      font-size: 12px;

      .ql-active {
        color: #444;

        .ql-stroke {
          stroke: #444;
        }
      }
    }

    &.ql-expanded .ql-picker-label {
      color: $primary !important;

      .ql-stroke {
        stroke: $primary !important;
      }
    }

    &.ql-font {
      width: 170px;

      .ql-picker-label[data-value='Arial'],
      .ql-picker-item[data-value='Arial'] {
        font-family: Arial;

        &::before {
          content: "Arial";
        }
      }

      .ql-picker-label[data-value="Comic Sans MS"],
      .ql-picker-item[data-value="Comic Sans MS"] {
        font-family: "Comic Sans MS";

        &::before {
          content: "Comic Sans MS";
        }
      }

      .ql-picker-label[data-value="Courier New"],
      .ql-picker-item[data-value="Courier New"] {
        font-family: "Courier New";

        &::before {
          content: "Courier New";
        }
      }

      .ql-picker-label[data-value='Georgia'],
      .ql-picker-item[data-value='Georgia'] {
        font-family: Georgia;

        &::before {
          content: "Georgia";
        }
      }

      .ql-picker-label[data-value="Lucida Sans Unicode"],
      .ql-picker-item[data-value="Lucida Sans Unicode"] {
        font-family: "Lucida Sans Unicode";

        &::before {
          content: "Lucida Sans Unicode";
        }
      }

      .ql-picker-label[data-value='Tahoma'],
      .ql-picker-item[data-value='Tahoma'] {
        font-family: Tahoma;

        &::before {
          content: "Tahoma";
        }
      }

      .ql-picker-label[data-value="Times New Roman"],
      .ql-picker-item[data-value="Times New Roman"] {
        font-family: 'Times New Roman';

        &::before {
          content: "Times New Roman";
        }
      }

      .ql-picker-label[data-value="Trebuchet MS"],
      .ql-picker-item[data-value="Trebuchet MS"] {
        font-family: "Trebuchet MS";

        &::before {
          content: "Trebuchet MS";
        }
      }

      .ql-picker-label[data-value='Verdana'],
      .ql-picker-item[data-value='Verdana'] {
        font-family: Verdana;

        &::before {
          content: "Verdana";
        }
      }
    }
  }

  .ql-tooltip {
    z-index: 10;

    @media (max-width: 768px) {
      position: fixed;
      bottom: 9px;
      top: auto !important;
      left: 0 !important;
      width: 100%;
      margin: 0;
      padding: 12px;

      .ql-preview {
        width: calc(100% - 170px);
      }

      input[type=text] {
        width: calc(100% - 115px);
      }
    }
  }

  &.ql-toolbar .ql-picker-item {
    &.ql-selected,
    &:hover {
      color: $primary !important;
    }
  }
}

.ql-content_width,
.ql-content_align,
.ql-custom_parameters,
.ql-custom_snippet {
  margin-left: 10px;

  .ql-picker-label {
    padding-right: 20px !important;
  }
}

[dir=ltr] .ql-toolbar.ql-snow .ql-formats {
	margin-right: 5px !important;
}

.ql-snow.ql-toolbar {
  padding: 6px 10px;
  background: #F8F8F8;

  button.ql-confirmation_link,
  button.ql-custom_signature_logo {
    width: auto;
    font-size: 11px;
    line-height: inherit;
    margin-left: 10px;
  }

  .ql-picker-label:hover,
  button:hover {
    color: $primary !important;

    .ql-stroke {
      stroke: $primary !important;
    }

    .ql-fill {
      fill: $primary !important;
    }
  }

  .ql-formats {
    margin-right: 2px;
  }
}

@mixin language($language) {
  @each $key, $value in $language {
    [data-value="#{$key}"]:before {
      content: $value;
    }
  }
}

html {
  &[lang="pt-BR"]{
    @include language($pt-BR);

    .ql-custom_parameters .ql-picker-label:before {
      content: "Parâmetro";
    }

    .ql-confirmation_link:before {
      content: "Inserir link de confirmação";
    }

    .ql-custom_signature_logo:before {
      content: "Adicionar logomarca na assinatura";
    }

    .ql-custom_snippet .ql-picker-label:before {
      content: "Snippet";
    }
  }

  &[lang="en"]{
    @include language($en);

    .ql-custom_parameters .ql-picker-label:before {
      content: "Parameter";
    }

    .ql-confirmation_link:before {
      content: "Insert Confirmation link";
    }

    .ql-custom_signature_logo:before {
      content: "Add logo on signature";
    }

    .ql-custom_snippet .ql-picker-label:before {
      content: "Snippet";
    }
  }

  &[lang="es"]{
    @include language($es);

    .ql-custom_parameters .ql-picker-label:before {
      content: "Parámetro";
    }

    .ql-confirmation_link:before {
      content: "Insertar link de confirmación";
    }

    .ql-custom_signature_logo:before {
      content: "Agregar logo en la firma";
    }

    .ql-custom_snippet .ql-picker-label:before {
      content: "Snippet";
    }
  }
}
